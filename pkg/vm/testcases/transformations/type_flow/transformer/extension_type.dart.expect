library #lib;
import self as self;
import "dart:core" as core;
import "dart:_internal" as _in;

class C4 extends core::Object {
  synthetic constructor •() → self::C4
    : super core::Object::•()
    ;

  [@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:1,getterSelectorId:2]
  method foo3() → dynamic {
    core::print([@vm.inferred-type.metadata=int] self::IC2|foo1(#C1));
    core::print([@vm.inferred-type.metadata=int] self::IC2|bar1());
  }
}
class Run<T extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::Run<self::Run::T%>
    : super core::Object::•()
    ;

  [@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasTearOffUses:false,methodOrSetterSelectorId:3,getterSelectorId:4]
  method execute([@vm.inferred-arg-type.metadata=dart.core::_GrowableList<dart.core::int> (skip check)] covariant-by-class final core::List<self::Run::T%> list) → void {}
}
abstract class C5<T extends core::Object? = dynamic> extends core::Object {
}
abstract class C6 extends core::Object {
}
extension type IC2(core::int id) {
  method foo1 = self::IC2|foo1;
  static method bar1 = self::IC2|bar1;
  constructor • = self::IC2|constructor#;
}
extension type SomeExtensionType(core::int foo) {
  constructor • = self::SomeExtensionType|constructor#;
}

[@vm.inferred-return-type.metadata=int]
[@vm.unboxing-info.metadata=(i)->i]
static extension-type-member method IC2|constructor#([@vm.inferred-arg-type.metadata=int] core::int id) → self::IC2% /* erasure=core::int, declared=! */ {
  lowered final self::IC2% /* erasure=core::int, declared=! */ #this = id;
  return #this;
}

[@vm.inferred-return-type.metadata=int]
[@vm.unboxing-info.metadata=(i)->i]
static extension-type-member method IC2|foo1([@vm.inferred-arg-type.metadata=dart.core::_Smi (value: 42)] lowered final self::IC2% /* erasure=core::int, declared=! */ #this) → core::int
  return [@vm.direct-call.metadata=dart.core::_IntegerImplementation.+] [@vm.inferred-type.metadata=int (skip check)] _in::unsafeCast<core::int>(#this).{core::num::+}(1){(core::num) → core::int};

[@vm.inferred-return-type.metadata=int]
[@vm.unboxing-info.metadata=()->i]
static extension-type-member method IC2|bar1() → self::IC2% /* erasure=core::int, declared=! */
  return [@vm.inferred-type.metadata=int] self::IC2|constructor#([@vm.direct-call.metadata=dart.core::_IntegerImplementation.+] [@vm.inferred-type.metadata=int (skip check)] _in::unsafeCast<core::int>(#C1).{core::num::+}(1){(core::num) → core::int});

[@vm.inferred-return-type.metadata=int]
[@vm.unboxing-info.metadata=(i)->i]
static extension-type-member method SomeExtensionType|constructor#([@vm.inferred-arg-type.metadata=int] core::int foo) → self::SomeExtensionType% /* erasure=core::int, declared=! */ {
  lowered final self::SomeExtensionType% /* erasure=core::int, declared=! */ #this = foo;
  return #this;
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method testTypeCheckRemoval() → void {
  final core::List<self::SomeExtensionType% /* erasure=core::int, declared=! */> list = [@vm.inferred-type.metadata=dart.core::_GrowableList<dart.core::int>] core::_GrowableList::generate<self::SomeExtensionType% /* erasure=core::int, declared=! */>(10, (final core::int a) → self::SomeExtensionType% /* erasure=core::int, declared=! */ => [@vm.inferred-type.metadata=int] self::SomeExtensionType|constructor#(a));
  final self::Run<self::SomeExtensionType% /* erasure=core::int, declared=! */> obj = new self::Run::•<self::SomeExtensionType% /* erasure=core::int, declared=! */>();
  [@vm.call-site-attributes.metadata=receiverType:#lib::Run<#lib::SomeExtensionType>] [@vm.direct-call.metadata=#lib::Run.execute] [@vm.inferred-type.metadata=!? (skip check)] obj.{self::Run::execute}(list){(core::List<self::SomeExtensionType% /* erasure=core::int, declared=! */>) → void};
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method main() → dynamic {
  let final self::C4 #t1 = new self::C4::•() in let final self::IC2% /* erasure=core::int, declared=! */ #t2 = [@vm.inferred-type.metadata=dart.core::_Smi (value: 42)] self::IC2|constructor#(42) in [@vm.direct-call.metadata=#lib::C4.foo3] [@vm.inferred-type.metadata=!? (skip check)] #t1.{self::C4::foo3}(){(self::IC2% /* erasure=core::int, declared=! */) → dynamic};
  self::testTypeCheckRemoval();
  core::print(#C2);
}
constants  {
  #C1 = 42
  #C2 = TypeLiteralConstant(self::C5<self::C6>)
}
