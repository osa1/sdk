library #lib;
import self as self;
import "dart:core" as core;

class Foo<T extends core::Object? = dynamic> extends core::Object {

  [@vm.inferred-type.metadata=dart.core::_Closure (closure 1 in #lib::Foo.aField)]
  [@vm.procedure-attributes.metadata=methodOrSetterCalledDynamically:false,getterCalledDynamically:false,hasThisUses:false,hasNonThisUses:false,hasTearOffUses:false,getterSelectorId:1]
  [@vm.closure-id=1]
  late covariant-by-class final field () → core::List<self::Foo::T%> aField = [@vm.closure-id=1]() → core::List<self::Foo::T%> {
    return [@vm.inferred-type.metadata=dart.core::_GrowableList<dart.core::String>] core::_GrowableList::•<self::Foo::T%>(0);
  };
  synthetic constructor •() → self::Foo<self::Foo::T%>
    : super core::Object::•()
    ;
}

[@vm.inferred-return-type.metadata=dart.core::Null? (value: null)]
static method main() → dynamic {
  core::print([@vm.direct-call.metadata=#lib::Foo.aField] [@vm.inferred-type.metadata=dart.core::_Closure (closure 1 in #lib::Foo.aField)] new self::Foo::•<core::String>().{self::Foo::aField}{() → core::List<core::String>});
}
