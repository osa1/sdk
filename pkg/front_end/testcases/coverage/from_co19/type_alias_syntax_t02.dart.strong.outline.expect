library;
import self as self;
import "dart:core" as core;

@self::meta
typedef CAlias1 = self::C<dynamic>;
@self::meta
typedef CAlias2<T extends core::Object? = dynamic> = self::C<T%>;
typedef CAlias3 = self::C<core::String>;
typedef CAlias4<unrelated T extends core::Object? = dynamic> = self::C<core::int>;
class C<T extends core::Object? = dynamic> extends core::Object {
  covariant-by-class field self::C::T% t;
  constructor •(self::C::T% t) → self::C<self::C::T%>
    ;
}
static const field core::int meta = 1;
static method foo() → void
  ;
static method _#CAlias4#new#tearOff<unrelated T extends core::Object? = dynamic>(core::int t) → self::C<core::int>
  return new self::C::•<core::int>(t);


Extra constant evaluation status:
Evaluated: StaticGet @ org-dartlang-testcase:///type_alias_syntax_t02.dart:14:2 -> IntConstant(1)
Evaluated: StaticGet @ org-dartlang-testcase:///type_alias_syntax_t02.dart:15:2 -> IntConstant(1)
Extra constant evaluation: evaluated: 4, effectively constant: 2
