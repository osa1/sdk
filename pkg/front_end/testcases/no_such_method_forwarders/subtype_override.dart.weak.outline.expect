library;
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → self::A
    ;
  abstract method method([core::int a = null]) → void;
}
class B extends core::Object implements self::A {
  synthetic constructor •() → self::B
    ;
  method noSuchMethod(core::Invocation _) → dynamic
    ;
  no-such-method-forwarder method /* signature-type: ([core::int]) → void */ method([core::int? a]) → void
    return this.{self::B::noSuchMethod}(new core::_InvocationMirror::_withType(#method, 0, const <core::Type*>[], core::List::unmodifiable<dynamic>(<dynamic>[a]), core::Map::unmodifiable<core::Symbol*, dynamic>(const <core::Symbol*, dynamic>{}))){(core::Invocation) → dynamic};
}
class C extends core::Object implements self::B {
  synthetic constructor •() → self::C
    ;
  method method([core::int a = 0]) → void
    ;
}


Extra constant evaluation status:
Evaluated: SymbolLiteral @ org-dartlang-testcase:///subtype_override.dart:5:7 -> SymbolConstant(#method)
Evaluated: ListLiteral @ org-dartlang-testcase:///subtype_override.dart:5:7 -> ListConstant(const <Type*>[])
Evaluated: MapLiteral @ org-dartlang-testcase:///subtype_override.dart:5:7 -> MapConstant(const <Symbol*, dynamic>{})
Extra constant evaluation: evaluated: 10, effectively constant: 3
