library;
import self as self;
import "const_lib.dart" as con;

import "org-dartlang-testcase:///const_lib.dart";

static const field con::B crossModule = const con::B::•();
static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;

library;
import self as con;
import "dart:core" as core;

abstract class A extends core::Object /*hasConstConstructor*/  {
  final field core::double d;
  final field core::String s;
  const constructor •({core::double d = 3.14, core::String s = "default"}) → con::A
    : con::A::d = d, con::A::s = s, super core::Object::•()
    ;
}
abstract class _B&A&M = con::A with con::M /*isAnonymousMixin,hasConstConstructor*/  {
  const synthetic constructor •({core::double d = 3.14, core::String s = "default"}) → con::_B&A&M
    : super con::A::•(d: d, s: s)
    ;
  mixin-super-stub method m1() → dynamic
    return super.{con::M::m1}();
}
class B extends con::_B&A&M /*hasConstConstructor*/  {
  const constructor •({core::double d = 2.71}) → con::B
    : super con::_B&A&M::•(d: d)
    ;
}
abstract class M extends con::A /*isMixinDeclaration*/  {
  method m1() → dynamic
    ;
}


Extra constant evaluation status:
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///main.dart:7:21 -> InstanceConstant(const B{A.d: 2.71, A.s: "default"})
Extra constant evaluation: evaluated: 7, effectively constant: 1
