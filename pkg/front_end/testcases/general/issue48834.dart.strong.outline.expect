library;
import self as self;
import "dart:core" as core;

extension HashAll on core::Iterable<dynamic> {
  method hashAll = self::HashAll|hashAll;
  method tearoff hashAll = self::HashAll|get#hashAll;
}
extension HashAllList on core::List<dynamic> {
  method hashAll = self::HashAllList|hashAll;
  method tearoff hashAll = self::HashAllList|get#hashAll;
}
static extension-member method HashAll|hashAll(lowered final core::Iterable<dynamic> #this) → core::int
  ;
static extension-member method HashAll|get#hashAll(lowered final core::Iterable<dynamic> #this) → () → core::int
  return () → core::int => self::HashAll|hashAll(#this);
static extension-member method HashAllList|hashAll(lowered final core::List<dynamic> #this) → core::int
  ;
static extension-member method HashAllList|get#hashAll(lowered final core::List<dynamic> #this) → () → core::int
  return () → core::int => self::HashAllList|hashAll(#this);
static method main() → void
  ;
