library;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  synthetic constructor •() → self::A
    ;
}
class B1<T extends core::Object? = dynamic> extends core::Object implements self::A {
  synthetic constructor •() → self::B1<self::B1::T%>
    ;
}
class B2<T extends core::Object? = dynamic> extends core::Object implements self::A {
  synthetic constructor •() → self::B2<self::B2::T%>
    ;
}
class C1<T extends core::Object? = dynamic> extends core::Object implements self::B1<self::C1::T%>, self::B2<self::C1::T%> {
  synthetic constructor •() → self::C1<self::C1::T%>
    ;
}
class C2<T extends core::Object? = dynamic> extends core::Object implements self::B1<self::C2::T%>, self::B2<self::C2::T%> {
  synthetic constructor •() → self::C2<self::C2::T%>
    ;
}
extension Extension on core::String {
  get pC1IntQuestion = self::Extension|get#pC1IntQuestion;
  get pIterableIntQuestion = self::Extension|get#pIterableIntQuestion;
  method test = self::Extension|test;
  method tearoff test = self::Extension|get#test;
  set pC1IntQuestion = self::Extension|set#pC1IntQuestion;
  set pIterableIntQuestion = self::Extension|set#pIterableIntQuestion;
}
static method contextIterable<T extends core::Object? = dynamic>(core::Iterable<self::contextIterable::T%> x) → core::Iterable<self::contextIterable::T%>
  ;
static method contextB1<T extends core::Object? = dynamic>(self::B1<self::contextB1::T%> x) → self::B1<self::contextB1::T%>
  ;
static extension-member method Extension|get#pC1IntQuestion(lowered final core::String #this) → self::C1<core::int>?
  ;
static extension-member method Extension|set#pC1IntQuestion(lowered final core::String #this, core::Object? value) → void
  ;
static extension-member method Extension|get#pIterableIntQuestion(lowered final core::String #this) → core::Iterable<core::int>?
  ;
static extension-member method Extension|set#pIterableIntQuestion(lowered final core::String #this, core::Object? value) → void
  ;
static extension-member method Extension|test(lowered final core::String #this) → dynamic
  ;
static extension-member method Extension|get#test(lowered final core::String #this) → () → dynamic
  return () → dynamic => self::Extension|test(#this);
static method main() → dynamic
  ;
