library;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
}
class B1<T extends core::Object? = dynamic> extends core::Object implements self::A {
  synthetic constructor •() → self::B1<self::B1::T%>
    : super core::Object::•()
    ;
}
class B2<T extends core::Object? = dynamic> extends core::Object implements self::A {
  synthetic constructor •() → self::B2<self::B2::T%>
    : super core::Object::•()
    ;
}
class C1<T extends core::Object? = dynamic> extends core::Object implements self::B1<self::C1::T%>, self::B2<self::C1::T%> {
  synthetic constructor •() → self::C1<self::C1::T%>
    : super core::Object::•()
    ;
}
class C2<T extends core::Object? = dynamic> extends core::Object implements self::B1<self::C2::T%>, self::B2<self::C2::T%> {
  synthetic constructor •() → self::C2<self::C2::T%>
    : super core::Object::•()
    ;
}
extension Extension on core::String {
  get pC1IntQuestion = self::Extension|get#pC1IntQuestion;
  get pIterableIntQuestion = self::Extension|get#pIterableIntQuestion;
  set pC1IntQuestion = self::Extension|set#pC1IntQuestion;
  set pIterableIntQuestion = self::Extension|set#pIterableIntQuestion;
}
static method contextIterableQuestion<T extends core::Object? = dynamic>(core::Iterable<self::contextIterableQuestion::T%>? x) → core::Iterable<self::contextIterableQuestion::T%>?
  return x;
static method contextB1Question<T extends core::Object? = dynamic>(self::B1<self::contextB1Question::T%>? x) → self::B1<self::contextB1Question::T%>?
  return x;
static extension-member method Extension|get#pC1IntQuestion(lowered final core::String #this) → self::C1<core::int>?
  return null;
static extension-member method Extension|set#pC1IntQuestion(lowered final core::String #this, core::Object? value) → void {}
static extension-member method Extension|get#pIterableIntQuestion(lowered final core::String #this) → core::Iterable<core::int>?
  return null;
static extension-member method Extension|set#pIterableIntQuestion(lowered final core::String #this, core::Object? value) → void {}
static method main() → dynamic {
  core::String? s = "" as core::String?;
  self::C2<core::double> c2Double = new self::C2::•<core::double>();
  self::contextB1Question<dynamic>(let final core::String? #t1 = s in #t1 == null ?{self::B1<dynamic>?} null : let final self::C1<core::int>? #t2 = self::Extension|get#pC1IntQuestion(#t1{core::String}) in #t2 == null ?{self::B1<dynamic>?} let final self::C2<core::double> #t3 = c2Double in let final void #t4 = self::Extension|set#pC1IntQuestion(#t1{core::String}, #t3) in #t3 : #t2{self::C1<core::int>});
  core::List<core::num> listNum = <core::num>[];
  self::contextIterableQuestion<core::num>(let final core::String? #t5 = s in #t5 == null ?{core::Iterable<core::num>?} null : let final core::Iterable<core::int>? #t6 = self::Extension|get#pIterableIntQuestion(#t5{core::String}) in #t6 == null ?{core::Iterable<core::num>?} let final core::List<core::num> #t7 = listNum in let final void #t8 = self::Extension|set#pIterableIntQuestion(#t5{core::String}, #t7) in #t7 : #t6{core::Iterable<core::int>});
}
