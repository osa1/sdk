library;
import self as self;
import "dart:core" as core;

typedef BAlias = self::B;
class A extends core::Object {
  static factory •() → self::A
    return new self::B::•();
  static factory named() → self::A
    return new self::B::named();
}
class B extends core::Object implements self::A {
  constructor •() → self::B
    ;
  constructor named() → self::B
    ;
}
static method main() → dynamic
  ;
