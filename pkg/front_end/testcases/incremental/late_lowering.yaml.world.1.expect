main = main::main;
library from "org-dartlang-test:///main.dart" as main {

  part part.dart;
  class _Class extends dart.core::Object { // from org-dartlang-test:///part.dart
    field dart.core::int? _#_Class#_privateField = null;
    synthetic constructor •() → main::_Class
      : super dart.core::Object::•()
      ;
    get _privateField() → dart.core::int
      return let final dart.core::int? #t1 = this.{main::_Class::_#_Class#_privateField}{dart.core::int?} in #t1 == null ?{dart.core::int} this.{main::_Class::_#_Class#_privateField} = 1 : #t1{dart.core::int};
    set _privateField(dart.core::int _privateField#param) → void
      this.{main::_Class::_#_Class#_privateField} = _privateField#param;
  }
  static method main() → dynamic {}
}
