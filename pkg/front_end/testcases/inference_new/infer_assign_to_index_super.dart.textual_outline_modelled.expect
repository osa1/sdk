library test;

T f<T>() => throw '';

class A {}

class B extends A {
  B operator *(B v) => throw '';
  B operator +(C v) => throw '';
  B operator -(int i) => throw '';
  C operator &(A v) => throw '';
}

class Base {
  B operator [](Index i) => throw '';
  void operator []=(Index i, B v) {}
}

class Base2 {
  B? operator [](Index i) => throw '';
  void operator []=(Index i, B? v) {}
}

class C extends B {}

class Index {}

class Test extends Base {
  void test() {}
}

class Test2 extends Base2 {
  void test() {}
}

main() {}
