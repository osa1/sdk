library;
import self as self;
import "dart:core" as core;

class Foo extends core::Object {
  synthetic constructor •() → self::Foo
    ;
}
extension type FooBar(self::Foo i) implements self::Foo {
  constructor • = self::FooBar|;
  constructor tearoff • = self::FooBar|_#new#tearOff;
}
extension type FooBaz(self::Foo i) implements self::Foo {
  constructor • = self::FooBaz|;
  constructor tearoff • = self::FooBaz|_#new#tearOff;
}
static inline-class-member method FooBar|(self::Foo i) → self::FooBar /* = self::Foo */
  ;
static inline-class-member method FooBar|_#new#tearOff(self::Foo i) → self::FooBar /* = self::Foo */
  return self::FooBar|(i);
static inline-class-member method FooBaz|(self::Foo i) → self::FooBaz /* = self::Foo */
  ;
static inline-class-member method FooBaz|_#new#tearOff(self::Foo i) → self::FooBaz /* = self::Foo */
  return self::FooBaz|(i);
static method main() → void
  ;
