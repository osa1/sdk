library;
//
// Problems in library:
//
// pkg/front_end/testcases/extension_types/implement_all.dart:33:45: Error: Type 'void' can't be used here.
// Try removing 'void' keyword or replace it with 'var', 'final', or a type.
// extension type ET_Void(Never it) implements void /* Error */ {}
//                                             ^^^^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:33:45: Error: Type 'void' not found.
// extension type ET_Void(Never it) implements void /* Error */ {}
//                                             ^^^^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:57:50: Error: 'Extension' isn't a type.
// extension type ET_Extension(Never it) implements Extension /* Error */ {}
//                                                  ^^^^^^^^^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:29:44: Error: The type 'Null' can't be implemented by an extension type.
// extension type ET_Null(Null it) implements Null /* Error */ {}
//                                            ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:31:50: Error: The type 'dynamic' can't be implemented by an extension type.
// extension type ET_Dynamic(dynamic it) implements dynamic /* Error */ {}
//                                                  ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:33:45: Error: The type 'void' can't be implemented by an extension type.
// extension type ET_Void(Never it) implements void /* Error */ {}
//                                             ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:35:46: Error: The type 'Never' can't be implemented by an extension type.
// extension type ET_Never(Never it) implements Never /* Error */ {}
//                                              ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:37:48: Error: The type 'Object' can't be implemented by an extension type.
// extension type ET_Object(Object it) implements Object /* Error */ {}
//                                                ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:39:48: Error: The type 'Record' can't be implemented by an extension type.
// extension type ET_Record(Record it) implements Record /* Error */ {}
//                                                ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:41:56: Error: The type 'RecordType' which is an alias of '(int, String)' can't be implemented by an extension type.
// extension type ET_RecordType(RecordType it) implements RecordType /* Error */ {}
//                                                        ^
// pkg/front_end/testcases/extension_types/implement_all.dart:7:9: Context: The issue arises via this type alias.
// typedef RecordType = (int, String);
//         ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:43:52: Error: The type 'Function' can't be implemented by an extension type.
// extension type ET_Function(Function it) implements Function /* Error */ {}
//                                                    ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:46:16: Error: The type 'FunctionType' which is an alias of 'void Function()' can't be implemented by an extension type.
//     implements FunctionType /* Error */ {}
//                ^
// pkg/front_end/testcases/extension_types/implement_all.dart:9:9: Context: The issue arises via this type alias.
// typedef FunctionType = void Function();
//         ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:49:16: Error: The type 'NullableInterfaceType' which is an alias of 'String?' can't be implemented by an extension type because it is nullable.
//     implements NullableInterfaceType /* Error */ {}
//                ^
// pkg/front_end/testcases/extension_types/implement_all.dart:11:9: Context: The issue arises via this type alias.
// typedef NullableInterfaceType = String?;
//         ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:52:16: Error: The type 'NullableExtensionType' which is an alias of 'ExtensionType?' can't be implemented by an extension type because it is nullable.
//     implements NullableExtensionType /* Error */ {}
//                ^
// pkg/front_end/testcases/extension_types/implement_all.dart:13:9: Context: The issue arises via this type alias.
// typedef NullableExtensionType = ExtensionType?;
//         ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:55:16: Error: The type 'FutureOr<int>' can't be implemented by an extension type.
//     implements FutureOr<int> /* Error */ {}
//                ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:57:50: Error: The type 'Extension' can't be implemented by an extension type.
// extension type ET_Extension(Never it) implements Extension /* Error */ {}
//                                                  ^
//
// pkg/front_end/testcases/extension_types/implement_all.dart:59:52: Error: The type variable 'T' can't be implemented by an extension type.
// extension type ET_TypeVariable<T>(T it) implements T /* Error */ {}
//                                                    ^
//
import self as self;
import "dart:core" as core;

import "dart:async";

typedef RecordType = (core::int, core::String);
typedef FunctionType = () → void;
typedef NullableInterfaceType = core::String?;
typedef NullableExtensionType = self::ExtensionType? /* = core::int? */;
typedef Alias = self::Class;
typedef GenericAlias<T extends core::Object? = dynamic> = self::GenericClass<T%>;
class Class extends core::Object {
  synthetic constructor •() → self::Class
    ;
}
class GenericClass<T extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::GenericClass<self::GenericClass::T%>
    ;
}
extension Extension on core::int {
}
extension type ExtensionType(core::int it) {
  constructor • = self::ExtensionType|constructor#;
  constructor tearoff • = self::ExtensionType|constructor#_#new#tearOff;
}
extension type GenericExtensionType<T extends core::Object? = dynamic>(T% it) {
  constructor • = self::GenericExtensionType|constructor#;
  constructor tearoff • = self::GenericExtensionType|constructor#_#new#tearOff;
}
extension type ET_Null(Null it) {
  constructor • = self::ET_Null|constructor#;
  constructor tearoff • = self::ET_Null|constructor#_#new#tearOff;
}
extension type ET_Dynamic(dynamic it) {
  constructor • = self::ET_Dynamic|constructor#;
  constructor tearoff • = self::ET_Dynamic|constructor#_#new#tearOff;
}
extension type ET_Void(Never it) {
  constructor • = self::ET_Void|constructor#;
  constructor tearoff • = self::ET_Void|constructor#_#new#tearOff;
}
extension type ET_Never(Never it) {
  constructor • = self::ET_Never|constructor#;
  constructor tearoff • = self::ET_Never|constructor#_#new#tearOff;
}
extension type ET_Object(core::Object it) {
  constructor • = self::ET_Object|constructor#;
  constructor tearoff • = self::ET_Object|constructor#_#new#tearOff;
}
extension type ET_Record(core::Record it) {
  constructor • = self::ET_Record|constructor#;
  constructor tearoff • = self::ET_Record|constructor#_#new#tearOff;
}
extension type ET_RecordType((core::int, core::String) it) {
  constructor • = self::ET_RecordType|constructor#;
  constructor tearoff • = self::ET_RecordType|constructor#_#new#tearOff;
}
extension type ET_Function(core::Function it) {
  constructor • = self::ET_Function|constructor#;
  constructor tearoff • = self::ET_Function|constructor#_#new#tearOff;
}
extension type ET_FunctionType(() → void it) {
  constructor • = self::ET_FunctionType|constructor#;
  constructor tearoff • = self::ET_FunctionType|constructor#_#new#tearOff;
}
extension type ET_NullableInterfaceType(core::String? it) {
  constructor • = self::ET_NullableInterfaceType|constructor#;
  constructor tearoff • = self::ET_NullableInterfaceType|constructor#_#new#tearOff;
}
extension type ET_NullableExtensionType(core::int it) {
  constructor • = self::ET_NullableExtensionType|constructor#;
  constructor tearoff • = self::ET_NullableExtensionType|constructor#_#new#tearOff;
}
extension type ET_FutureOr(FutureOr<core::int>it) {
  constructor • = self::ET_FutureOr|constructor#;
  constructor tearoff • = self::ET_FutureOr|constructor#_#new#tearOff;
}
extension type ET_Extension(Never it) {
  constructor • = self::ET_Extension|constructor#;
  constructor tearoff • = self::ET_Extension|constructor#_#new#tearOff;
}
extension type ET_TypeVariable<T extends core::Object? = dynamic>(T% it) {
  constructor • = self::ET_TypeVariable|constructor#;
  constructor tearoff • = self::ET_TypeVariable|constructor#_#new#tearOff;
}
extension type ET_Class(self::Class it) implements self::Class {
  constructor • = self::ET_Class|constructor#;
  constructor tearoff • = self::ET_Class|constructor#_#new#tearOff;
}
extension type ET_GenericClass<T extends core::Object? = dynamic>(self::GenericClass<T%> it) implements self::GenericClass<T%> {
  constructor • = self::ET_GenericClass|constructor#;
  constructor tearoff • = self::ET_GenericClass|constructor#_#new#tearOff;
}
extension type ET_Alias(self::Class it) implements self::Class {
  constructor • = self::ET_Alias|constructor#;
  constructor tearoff • = self::ET_Alias|constructor#_#new#tearOff;
}
extension type ET_GenericAlias<T extends core::Object? = dynamic>(self::GenericClass<T%> it) implements self::GenericClass<T%> {
  constructor • = self::ET_GenericAlias|constructor#;
  constructor tearoff • = self::ET_GenericAlias|constructor#_#new#tearOff;
}
extension type ET_ExtensionType(core::int it) implements self::ExtensionType /* = core::int */ {
  constructor • = self::ET_ExtensionType|constructor#;
  constructor tearoff • = self::ET_ExtensionType|constructor#_#new#tearOff;
}
extension type ET_GenericExtensionType<T extends core::Object? = dynamic>(T% it) implements self::GenericExtensionType<T%> /* = T% */ {
  constructor • = self::ET_GenericExtensionType|constructor#;
  constructor tearoff • = self::ET_GenericExtensionType|constructor#_#new#tearOff;
}
static inline-class-member method ExtensionType|constructor#(core::int it) → self::ExtensionType /* = core::int */
  ;
static inline-class-member method ExtensionType|constructor#_#new#tearOff(core::int it) → self::ExtensionType /* = core::int */
  return self::ExtensionType|constructor#(it);
static inline-class-member method GenericExtensionType|constructor#<T extends core::Object? = dynamic>(self::GenericExtensionType|constructor#::T% it) → self::GenericExtensionType<self::GenericExtensionType|constructor#::T%> /* = self::GenericExtensionType|constructor#::T% */
  ;
static inline-class-member method GenericExtensionType|constructor#_#new#tearOff<T extends core::Object? = dynamic>(self::GenericExtensionType|constructor#_#new#tearOff::T% it) → self::GenericExtensionType<self::GenericExtensionType|constructor#_#new#tearOff::T%> /* = self::GenericExtensionType|constructor#_#new#tearOff::T% */
  return self::GenericExtensionType|constructor#<self::GenericExtensionType|constructor#_#new#tearOff::T%>(it);
static inline-class-member method ET_Null|constructor#(Null it) → self::ET_Null /* = Null */
  ;
static inline-class-member method ET_Null|constructor#_#new#tearOff(Null it) → self::ET_Null /* = Null */
  return self::ET_Null|constructor#(it);
static inline-class-member method ET_Dynamic|constructor#(dynamic it) → self::ET_Dynamic /* = dynamic */
  ;
static inline-class-member method ET_Dynamic|constructor#_#new#tearOff(dynamic it) → self::ET_Dynamic /* = dynamic */
  return self::ET_Dynamic|constructor#(it);
static inline-class-member method ET_Void|constructor#(Never it) → self::ET_Void /* = Never */
  ;
static inline-class-member method ET_Void|constructor#_#new#tearOff(Never it) → self::ET_Void /* = Never */
  return self::ET_Void|constructor#(it);
static inline-class-member method ET_Never|constructor#(Never it) → self::ET_Never /* = Never */
  ;
static inline-class-member method ET_Never|constructor#_#new#tearOff(Never it) → self::ET_Never /* = Never */
  return self::ET_Never|constructor#(it);
static inline-class-member method ET_Object|constructor#(core::Object it) → self::ET_Object /* = core::Object */
  ;
static inline-class-member method ET_Object|constructor#_#new#tearOff(core::Object it) → self::ET_Object /* = core::Object */
  return self::ET_Object|constructor#(it);
static inline-class-member method ET_Record|constructor#(core::Record it) → self::ET_Record /* = core::Record */
  ;
static inline-class-member method ET_Record|constructor#_#new#tearOff(core::Record it) → self::ET_Record /* = core::Record */
  return self::ET_Record|constructor#(it);
static inline-class-member method ET_RecordType|constructor#((core::int, core::String) it) → self::ET_RecordType /* =(core::int, core::String) */
  ;
static inline-class-member method ET_RecordType|constructor#_#new#tearOff((core::int, core::String) it) → self::ET_RecordType /* =(core::int, core::String) */
  return self::ET_RecordType|constructor#(it);
static inline-class-member method ET_Function|constructor#(core::Function it) → self::ET_Function /* = core::Function */
  ;
static inline-class-member method ET_Function|constructor#_#new#tearOff(core::Function it) → self::ET_Function /* = core::Function */
  return self::ET_Function|constructor#(it);
static inline-class-member method ET_FunctionType|constructor#(() → void it) → self::ET_FunctionType /* = () → void */
  ;
static inline-class-member method ET_FunctionType|constructor#_#new#tearOff(() → void it) → self::ET_FunctionType /* = () → void */
  return self::ET_FunctionType|constructor#(it);
static inline-class-member method ET_NullableInterfaceType|constructor#(core::String? it) → self::ET_NullableInterfaceType /* = core::String? */
  ;
static inline-class-member method ET_NullableInterfaceType|constructor#_#new#tearOff(core::String? it) → self::ET_NullableInterfaceType /* = core::String? */
  return self::ET_NullableInterfaceType|constructor#(it);
static inline-class-member method ET_NullableExtensionType|constructor#(core::int it) → self::ET_NullableExtensionType /* = core::int */
  ;
static inline-class-member method ET_NullableExtensionType|constructor#_#new#tearOff(core::int it) → self::ET_NullableExtensionType /* = core::int */
  return self::ET_NullableExtensionType|constructor#(it);
static inline-class-member method ET_FutureOr|constructor#(FutureOr<core::int>it) → self::ET_FutureOr /* = FutureOr<core::int>*/
  ;
static inline-class-member method ET_FutureOr|constructor#_#new#tearOff(FutureOr<core::int>it) → self::ET_FutureOr /* = FutureOr<core::int>*/
  return self::ET_FutureOr|constructor#(it);
static inline-class-member method ET_Extension|constructor#_#new#tearOff(Never it) → self::ET_Extension /* = Never */
  return self::ET_Extension|constructor#(it);
static inline-class-member method ET_Extension|constructor#(Never it) → self::ET_Extension /* = Never */
  ;
static inline-class-member method ET_TypeVariable|constructor#<T extends core::Object? = dynamic>(self::ET_TypeVariable|constructor#::T% it) → self::ET_TypeVariable<self::ET_TypeVariable|constructor#::T%> /* = self::ET_TypeVariable|constructor#::T% */
  ;
static inline-class-member method ET_TypeVariable|constructor#_#new#tearOff<T extends core::Object? = dynamic>(self::ET_TypeVariable|constructor#_#new#tearOff::T% it) → self::ET_TypeVariable<self::ET_TypeVariable|constructor#_#new#tearOff::T%> /* = self::ET_TypeVariable|constructor#_#new#tearOff::T% */
  return self::ET_TypeVariable|constructor#<self::ET_TypeVariable|constructor#_#new#tearOff::T%>(it);
static inline-class-member method ET_Class|constructor#(self::Class it) → self::ET_Class /* = self::Class */
  ;
static inline-class-member method ET_Class|constructor#_#new#tearOff(self::Class it) → self::ET_Class /* = self::Class */
  return self::ET_Class|constructor#(it);
static inline-class-member method ET_GenericClass|constructor#<T extends core::Object? = dynamic>(self::GenericClass<self::ET_GenericClass|constructor#::T%> it) → self::ET_GenericClass<self::ET_GenericClass|constructor#::T%> /* = self::GenericClass<self::ET_GenericClass|constructor#::T%> */
  ;
static inline-class-member method ET_GenericClass|constructor#_#new#tearOff<T extends core::Object? = dynamic>(self::GenericClass<self::ET_GenericClass|constructor#_#new#tearOff::T%> it) → self::ET_GenericClass<self::ET_GenericClass|constructor#_#new#tearOff::T%> /* = self::GenericClass<self::ET_GenericClass|constructor#_#new#tearOff::T%> */
  return self::ET_GenericClass|constructor#<self::ET_GenericClass|constructor#_#new#tearOff::T%>(it);
static inline-class-member method ET_Alias|constructor#(self::Class it) → self::ET_Alias /* = self::Class */
  ;
static inline-class-member method ET_Alias|constructor#_#new#tearOff(self::Class it) → self::ET_Alias /* = self::Class */
  return self::ET_Alias|constructor#(it);
static inline-class-member method ET_GenericAlias|constructor#<T extends core::Object? = dynamic>(self::GenericClass<self::ET_GenericAlias|constructor#::T%> it) → self::ET_GenericAlias<self::ET_GenericAlias|constructor#::T%> /* = self::GenericClass<self::ET_GenericAlias|constructor#::T%> */
  ;
static inline-class-member method ET_GenericAlias|constructor#_#new#tearOff<T extends core::Object? = dynamic>(self::GenericClass<self::ET_GenericAlias|constructor#_#new#tearOff::T%> it) → self::ET_GenericAlias<self::ET_GenericAlias|constructor#_#new#tearOff::T%> /* = self::GenericClass<self::ET_GenericAlias|constructor#_#new#tearOff::T%> */
  return self::ET_GenericAlias|constructor#<self::ET_GenericAlias|constructor#_#new#tearOff::T%>(it);
static inline-class-member method ET_ExtensionType|constructor#(core::int it) → self::ET_ExtensionType /* = core::int */
  ;
static inline-class-member method ET_ExtensionType|constructor#_#new#tearOff(core::int it) → self::ET_ExtensionType /* = core::int */
  return self::ET_ExtensionType|constructor#(it);
static inline-class-member method ET_GenericExtensionType|constructor#<T extends core::Object? = dynamic>(self::ET_GenericExtensionType|constructor#::T% it) → self::ET_GenericExtensionType<self::ET_GenericExtensionType|constructor#::T%> /* = self::ET_GenericExtensionType|constructor#::T% */
  ;
static inline-class-member method ET_GenericExtensionType|constructor#_#new#tearOff<T extends core::Object? = dynamic>(self::ET_GenericExtensionType|constructor#_#new#tearOff::T% it) → self::ET_GenericExtensionType<self::ET_GenericExtensionType|constructor#_#new#tearOff::T%> /* = self::ET_GenericExtensionType|constructor#_#new#tearOff::T% */
  return self::ET_GenericExtensionType|constructor#<self::ET_GenericExtensionType|constructor#_#new#tearOff::T%>(it);
