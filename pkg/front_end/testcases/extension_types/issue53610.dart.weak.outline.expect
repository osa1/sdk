library;
import self as self;

extension type N(Null _) {
  abstract extension-type-member representation-field get _() → Null;
  constructor • = self::N|constructor#;
  constructor tearoff • = self::N|constructor#_#new#tearOff;
}
static extension-type-member method N|constructor#(Null _) → self::N% /* erasure=Null, declared=! */ {
  lowered final self::N% /* erasure=Null, declared=! */ #this = _;
  return #this;
}
static extension-type-member method N|constructor#_#new#tearOff(Null _) → self::N% /* erasure=Null, declared=! */
  return self::N|constructor#(_);
static method main() → void
  ;
