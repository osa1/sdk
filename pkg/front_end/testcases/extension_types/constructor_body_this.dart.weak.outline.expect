library;
import self as self;
import "dart:core" as core;

extension type V1(core::int id) {
  constructor n0 = self::V1|n0;
  tearoff n0 = self::V1|_#n0#tearOff;
  constructor • = self::V1|;
  tearoff • = self::V1|_#new#tearOff;
  constructor n1 = self::V1|n1;
  tearoff n1 = self::V1|_#n1#tearOff;
  constructor n2 = self::V1|n2;
  tearoff n2 = self::V1|_#n2#tearOff;
}
static inline-class-member method V1|n0(core::int id) → self::V1 /* = core::int */
  ;
static inline-class-member method V1|_#n0#tearOff(core::int id) → self::V1 /* = core::int */
  return self::V1|n0(id);
static inline-class-member method V1|(core::int id) → self::V1 /* = core::int */
  ;
static inline-class-member method V1|_#new#tearOff(core::int id) → self::V1 /* = core::int */
  return self::V1|(id);
static inline-class-member method V1|n1([core::int x = 0]) → self::V1 /* = core::int */
  ;
static inline-class-member method V1|_#n1#tearOff([has-declared-initializer core::int x]) → self::V1 /* = core::int */
  return self::V1|n1(x);
static inline-class-member method V1|n2(core::int id) → self::V1 /* = core::int */
  ;
static inline-class-member method V1|_#n2#tearOff(core::int id) → self::V1 /* = core::int */
  return self::V1|n2(id);
static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
