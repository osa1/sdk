library;
import self as self;
import "dart:core" as core;

extension type IC1(core::int id) {
  abstract extension-type-member representation-field get id() → core::int;
  constructor • = self::IC1|constructor#;
  constructor tearoff • = self::IC1|constructor#_#new#tearOff;
  static redirecting-factory f = self::IC1|constructor#f;
  static redirecting-factory tearoff f = self::IC1|constructor#_#f#tearOff;
}
static extension-type-member method IC1|constructor#(core::int id) → self::IC1% /* erasure=core::int, declared=! */ {
  lowered final self::IC1% /* erasure=core::int, declared=! */ #this = id;
  return #this;
}
static extension-type-member method IC1|constructor#_#new#tearOff(core::int id) → self::IC1% /* erasure=core::int, declared=! */
  return self::IC1|constructor#(id);
static extension-type-member method IC1|constructor#f(core::int id) → self::IC1% /* erasure=core::int, declared=! */ /* redirection-target: self::IC1|constructor# */
  return self::IC1|constructor#(id);
static extension-type-member method IC1|constructor#_#f#tearOff(core::int id) → self::IC1% /* erasure=core::int, declared=! */
  return self::IC1|constructor#(id);
static method main() → dynamic {
  self::IC1% /* erasure=core::int, declared=! */ ic1 = self::IC1|constructor#(1);
  core::print(ic1 as{Unchecked} core::int);
}
