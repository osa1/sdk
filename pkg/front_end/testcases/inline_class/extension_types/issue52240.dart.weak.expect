library;
import self as self;
import "dart:core" as core;

extension type X(core::int obj) {
  constructor _ = self::X|_;
  tearoff _ = self::X|_#_#tearOff;
  constructor • = self::X|;
  tearoff • = self::X|_#new#tearOff;
  constructor named = self::X|named;
  tearoff named = self::X|_#named#tearOff;
}
static inline-class-member method X|_(dynamic obj) → self::X /* = core::int */ {
  lowered final self::X /* = core::int */ #this = obj;
  return #this;
}
static inline-class-member method X|_#_#tearOff(dynamic obj) → self::X /* = core::int */
  return self::X|_(obj);
static inline-class-member method X|() → self::X /* = core::int */ {
  lowered final self::X /* = core::int */ #this = 0;
  return #this;
}
static inline-class-member method X|_#new#tearOff() → self::X /* = core::int */
  return self::X|();
static inline-class-member method X|named() → self::X /* = core::int */ {
  lowered final self::X /* = core::int */ #this = 0;
  return #this;
}
static inline-class-member method X|_#named#tearOff() → self::X /* = core::int */
  return self::X|named();
static method main() → void {
  core::print(#C1(){() → self::X /* = core::int */} as{Unchecked} core::int);
  core::print(#C2(){() → self::X /* = core::int */} as{Unchecked} core::int);
}

constants  {
  #C1 = static-tearoff self::X|_#new#tearOff
  #C2 = static-tearoff self::X|_#named#tearOff
}
