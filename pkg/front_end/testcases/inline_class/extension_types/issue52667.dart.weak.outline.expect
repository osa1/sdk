library;
import self as self;
import "dart:core" as core;

abstract class Foo extends core::Object {
  synthetic constructor •() → self::Foo
    ;
}
inline class FooBar /* declaredRepresentationType = core::int */ implements self::Foo {
  constructor • = self::FooBar|;
  tearoff • = self::FooBar|_#new#tearOff;
}
inline class FooBaz /* declaredRepresentationType = core::int */ implements self::Foo {
  constructor • = self::FooBaz|;
  tearoff • = self::FooBaz|_#new#tearOff;
}
static inline-class-member method FooBar|(dynamic i) → self::FooBar
  ;
static inline-class-member method FooBar|_#new#tearOff(dynamic i) → self::FooBar
  return self::FooBar|(i);
static inline-class-member method FooBaz|(dynamic i) → self::FooBaz
  ;
static inline-class-member method FooBaz|_#new#tearOff(dynamic i) → self::FooBaz
  return self::FooBaz|(i);
static method main() → void
  ;
