library;
import self as self;
import "dart:core" as core;

extension type Class1(core::int field) {
  constructor • = self::Class1|;
  tearoff • = self::Class1|_#new#tearOff;
}
extension type Class2(core::int field) {
  constructor • = self::Class2|;
  tearoff • = self::Class2|_#new#tearOff;
}
extension type Class3(core::int field) {
}
extension type Class4(core::int field) {
  constructor • = self::Class4|;
  tearoff • = self::Class4|_#new#tearOff;
}
extension type Class5(core::int field) {
  constructor • = self::Class5|;
  tearoff • = self::Class5|_#new#tearOff;
}
extension type Class6(core::int field) {
  constructor • = self::Class6|;
  tearoff • = self::Class6|_#new#tearOff;
}
static inline-class-member method Class1|(core::int field) → self::Class1 /* = core::int */
  ;
static inline-class-member method Class1|_#new#tearOff(core::int field) → self::Class1 /* = core::int */
  return self::Class1|(field);
static inline-class-member method Class2|(core::int field) → self::Class2 /* = core::int */
  ;
static inline-class-member method Class2|_#new#tearOff(core::int field) → self::Class2 /* = core::int */
  return self::Class2|(field);
static inline-class-member method Class4|(core::int field, dynamic nonexisting) → self::Class4 /* = core::int */
  ;
static inline-class-member method Class4|_#new#tearOff(core::int field, dynamic nonexisting) → self::Class4 /* = core::int */
  return self::Class4|(field, nonexisting);
static inline-class-member method Class5|(core::int field) → self::Class5 /* = core::int */
  ;
static inline-class-member method Class5|_#new#tearOff(core::int field) → self::Class5 /* = core::int */
  return self::Class5|(field);
static inline-class-member method Class6|(core::int field) → self::Class6 /* = core::int */
  ;
static inline-class-member method Class6|_#new#tearOff(core::int field) → self::Class6 /* = core::int */
  return self::Class6|(field);
