library;
import self as self;
import "dart:core" as core;

inline class Class /* declaredRepresentationType = core::int */ {
  constructor • = self::Class|;
  tearoff • = self::Class|_#new#tearOff;
}
static inline-class-member method Class|(core::int i) → self::Class {
  lowered final self::Class #this = i;
  return #this;
}
static inline-class-member method Class|_#new#tearOff(core::int i) → self::Class
  return self::Class|(i);
static method main() → dynamic {
  self::expect(42, #C1);
}
static method expect(dynamic expected, dynamic actual) → dynamic {
  if(!(expected =={core::Object::==}{(core::Object) → core::bool} actual))
    throw "Expected ${expected}, actual ${actual}";
}

constants  {
  #C1 = 42
}
