library;
import self as self;
import "dart:core" as core;

typedef _ = self::BB;
class AA extends core::Object {
  synthetic constructor •() → self::AA
    ;
}
class BB extends self::AA {
  synthetic constructor •() → self::BB
    ;
}
class A<T extends core::Object? = dynamic, U extends self::AA> extends core::Object {
  synthetic constructor •() → self::A<self::A::T%, self::A::U>
    ;
}
class B<_#wc0#type extends core::Object? = dynamic, _#wc1#type extends self::AA> extends self::A<self::BB, self::BB> {
  synthetic constructor •() → self::B<self::B::_#wc0#type%, self::B::_#wc1#type>
    ;
  method foo<_#wc2#type extends self::BB>([wildcard core::int _#wc3#formal = 2]) → core::int
    ;
}
class C<T extends core::Object? = dynamic, _#wc4#type extends self::BB> extends self::A<self::C::T%, self::BB> {
  static const field core::int _ = 1;
  synthetic constructor •() → self::C<self::C::T%, self::C::_#wc4#type>
    ;
}
class D<_#wc5#type extends core::Object? = dynamic, _#wc6#type extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::D<self::D::_#wc5#type%, self::D::_#wc6#type%>
    ;
}
class DoesNotUseTypeVariable<_#wc7#type extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::DoesNotUseTypeVariable<self::DoesNotUseTypeVariable::_#wc7#type%>
    ;
  method returnsBB() → core::Type
    ;
  method alsoReturnsBB<_#wc8#type extends core::Object? = dynamic, _#wc9#type extends core::int>() → core::Type
    ;
}
