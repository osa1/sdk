library;
import self as self;
import "dart:core" as core;
import "package:macro/macro.dart" as mac;

import "package:macro/macro.dart";
import "dart:core" as prefix0;
import "dart:core" as prefix0;
import "dart:core" as prefix0;
import "dart:core" as prefix0;
import "dart:core" as prefix0;

abstract class Interface extends core::Object {
  synthetic constructor •() → self::Interface
    : super core::Object::•()
    ;
  abstract method method() → core::String;
  abstract method get_method() → core::String;
  abstract method get_field(core::int i) → core::int;
}
class Class extends core::Object implements self::Interface {
  @#C1
  field core::int field = 0;
  @#C1
  field core::String staticField = "42";
  @#C1
  constructor •(core::int field) → self::Class
    : self::Class::field = field, super core::Object::•()
    ;
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_field(core::int f) → core::int
    return this.{self::Class::field}{core::int};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_fieldFunc((core::int) → core::int f) → () → core::int
    return () → core::int => this.{self::Class::field}{core::int};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_fieldList(core::List<core::int> l) → core::List<core::int>
    return <core::int>[this.{self::Class::field}{core::int}];
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_method() → core::String
    return this.{self::Class::method}(){() → core::String};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_methodFunc() → () → core::String
    return () → core::String => this.{self::Class::method}(){() → core::String};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_methodList() → core::List<core::String>
    return <core::String>[this.{self::Class::method}(){() → core::String}];
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_staticField(core::String f) → core::String
    return this.{self::Class::staticField}{core::String};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_staticFieldFunc((core::String) → core::String f) → () → core::String
    return () → core::String => this.{self::Class::staticField}{core::String};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_staticFieldList(core::List<core::String> l) → core::List<core::String>
    return <core::String>[this.{self::Class::staticField}{core::String}];
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_staticMethod() → dynamic
    return this.{self::Class::staticMethod}(){() → dynamic};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_staticMethodFunc() → () → dynamic
    return () → dynamic => this.{self::Class::staticMethod}(){() → dynamic};
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_staticMethodList() → core::List<dynamic>
    return <dynamic>[this.{self::Class::staticMethod}(){() → dynamic}];
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_() → core::int
    return throw "";
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_Func() → () → core::int
    return throw "";
  method /* from dart-macro+org-dartlang-test:///a/b/c/main.dart */ get_List() → core::List<core::int>
    return throw "";
  @#C1
  method method() → core::String
    return "42";
  @#C1
  method staticMethod() → dynamic
    return "42";
}

constants  {
  #C1 = mac::InferableMacro {}
}
